[#ftl]
[#--template for the client-side complex/simple type interface.--]
// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoBindable.h"
[#list superClassImports as import]
#import "${import}.h"
[/#list]

[#if clazz.abstract]
// abstract class
[/#if]

[#list fieldClassImports as import]
@class ${import};
[/#list]

[#list fieldFileImports as import]
#import "${import}.h"
[/#list]
/**
 ${clazz.docComment?default("(public class)")?replace("\n", "\n ")?replace("\t", "")}
 
 [#if group??]
 @ingroup ${group}
 [/#if]
*/
@interface ${clazz.name} : [#if clazz.superClass??]${clazz.superClass.name}[#else]NSObject<PicoBindable>[/#if] {

@private
[#list clazz.fields as field]
[#if field.type.primitive]
	[#if field.type.wrapper]
	${field.type.fullName} *_${field.name};
	[#else]
	${field.type.fullName} _${field.name};
	[/#if]
[#elseif field.type.collection]
    NSArray *_${field.name};
[#elseif field.type.enum]
    ${field.type.fullName} _${field.name};
[#elseif field.any]
    NSArray *_${field.name};
[#else]
    ${field.type.fullName} *_${field.name};
[/#if]
[/#list]

}

[#function getPrimitiveTypeName type]
  [#assign index = type?last_index_of("_") ]
  [#return type?substring(index + 1)?lower_case]
[/#function]

[#list clazz.fields as field]
[#if field.type.collection]
  	[#assign type = field.type.typeParameters?first]
@property (nonatomic, retain) NSArray *${field.name};
[#elseif field.type.enum]
@property (nonatomic) ${field.type.fullName} ${field.name};
[#elseif field.type.primitive]
	[#if field.type.wrapper]
@property (nonatomic, retain) ${field.type.fullName} *${field.name};
	[#else]
@property (nonatomic) ${field.type.fullName} ${field.name};
	[/#if]
[#else]
@property (nonatomic, retain) ${field.type.fullName} *${field.name};
[/#if]

[/#list]

@end
